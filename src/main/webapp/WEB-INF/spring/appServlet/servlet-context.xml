<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!--  CSS 폴더 등록 --> 
  	<resources mapping="/css/**" location="/css/" /> 
  	<!--  Img 폴더 등록 --> 
    <resources mapping="/img/**" location="/img/" /> 
    <!--  file 폴더 등록 --> 
    <resources mapping="/file/**" location="/file/" /> 



	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="JoinerDao" class="LoginTask.dao.JoinerDao"/>
	<beans:bean id="loginService" class="LoginTask.service.loginService"/>
	<beans:bean id="insertJoinerService" class="LoginTask.service.insertJoinerService"/>
	<beans:bean id="selectMypageService" class="LoginTask.service.selectMypageService"/>
	<beans:bean id="MemberListService" class="LoginTask.service.MemberListService"/>
	<beans:bean id="DeleteMemberService" class="LoginTask.service.DeleteMemberService"/>
	
	<beans:bean id="MessageDao" class="LoginTask.dao.MessageDao"/>
	<beans:bean id="MessageListService" class="LoginTask.messageService.MessageListService"/>
	<beans:bean id="InsertMessageService" class="LoginTask.messageService.InsertMessageService"/>
	<beans:bean id="DeleteMessageService" class="LoginTask.messageService.DeleteMessageService"/>
	
	<!-- DB연동을 위한 Datasource 빈 등록 : JdbcTemplate에 주입, Mybatis 설정 -->
	<beans:bean
		id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<beans:property name="driverClass" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<beans:property name="user" value="student"/>
		<beans:property name="password" value="1234"/>
	</beans:bean>
	
	<!-- JdbcTemplate 빈 등록 -->
	<beans:bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource">
	<!-- <beans:property name="dataSource" ref="dataSource"/> -->
	</beans:bean>
	
	<!-- Dao 빈 등록 -->
	<beans:bean id="jdbcTemplateJoinerDao" class="LoginTask.dao.JdbcTemplateJoinerDao"/>
	<beans:bean id="jdbcTemplateMessageDao" class="LoginTask.dao.JdbcTemplateMessageDao"/>
	
	
	<context:component-scan base-package="LoginTask.controller" />
	
	<!-- PlatformTransactionManager 빈 설정 -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<!-- @Transactional 애노테이션 활성화 설정 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 파일업로드 처리를 위한 multipartResolver bean 등록 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
	</beans:bean>
	
	<interceptors>
		<interceptor>
			<mapping path="/**"/>
			<exclude-mapping path="/"/>
			<exclude-mapping path="/indexHome"/>
			<exclude-mapping path="/login/**"/>
			<exclude-mapping path="/regi/**"/>
			<exclude-mapping path="/resources/**"/>
			<exclude-mapping path="/css/**"/>
			<exclude-mapping path="/img/**"/>
			<beans:bean class="LoginTask.Interceptor.AuthCheckInterceptor"></beans:bean>
		</interceptor>
	</interceptors>
	
</beans:beans>
